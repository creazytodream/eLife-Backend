<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.OrderlistMapper">
  <resultMap id="BaseResultMap" type="com.entity.Orderlist">
    <id column="orderId" jdbcType="VARCHAR" property="orderid" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="orderDate" jdbcType="TIMESTAMP" property="orderdate" />
    <result column="orderStatus" jdbcType="VARCHAR" property="orderstatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Base_Column_List">
    orderId, openid, orderDate, orderStatus, remarks
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderList
    where orderId = #{orderid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from orderList
    where orderId = #{orderid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.entity.Orderlist">
    <selectKey keyProperty="orderid" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orderList (orderId, openid, orderDate, orderStatus, remarks)
    values (#{orderid,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR}, CURRENT_TIMESTAMP(), #{orderstatus,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Orderlist">
    <selectKey keyProperty="orderid" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orderList
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="openid != null">
        openid,
      </if>
      <if test="orderdate != null">
        orderDate,
      </if>
      <if test="orderstatus != null">
        orderStatus,
      </if>
      <if test="reamrks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="orderdate != null">
        #{orderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstatus != null">
        #{orderstatus,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Orderlist">
    update orderList
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="orderdate != null">
        orderDate = #{orderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="orderstatus != null">
        orderStatus = #{orderstatus,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Orderlist">
    update orderList
    set openid = #{openid,jdbcType=VARCHAR},
      orderDate = #{orderdate,jdbcType=TIMESTAMP},
      orderStatus = #{orderstatus,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where orderId = #{orderid,jdbcType=VARCHAR}
  </update>
  
  <select id="findOrderlist" parameterType="java.lang.String" resultType="com.entity.Orderlist">
	select orderid, orderdate, sum(quantity) as orderQuantity, sum(price) as orderAmount
	from (
		select d.orderid, DATE_FORMAT(d.orderdate,"%Y-%m-%d %T") as orderDate, a.quantity, a.quantity * c.productPrice as price
		from orderDetail a
		cross join goodsList c on a.productId=c.productId and c.productStatus=#{productStatus,jdbcType=CHAR}
		cross join orderList d on a.orderId=d.orderId and d.orderStatus='1'
		where d.openid = #{openid,jdbcType=CHAR}
		and d.orderstatus = '1'
	) t
	group by orderid, orderdate
	order by orderDate desc 
  </select>
  
  <update id="updateOrderStaus" parameterType="java.lang.String">
    update orderList
    set orderStatus = '2'
    where orderId = #{orderid,jdbcType=VARCHAR}
  </update>
</mapper>